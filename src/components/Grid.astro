---
interface Props {
	variant?: 'offset' | 'small';
}

const { variant } = Astro.props;
---

<ul class:list={['grid', { offset: variant === 'offset', small: variant === 'small' }]}>
	<slot />
</ul>

<style>
	:root {
		--row-offset: var(--default-offset);
	}
	.grid {
		display: grid;
		grid-auto-rows: 1fr;
		gap: 1rem;
		list-style: none;
		padding: 0;
	}

	.grid.small {
		grid-template-columns: 1fr 1fr;
		gap: 1.5rem;
	}

	.grid.small > :global(:last-child:nth-child(odd)) {
		grid-column: 1 / 3;
	}

	@media (min-width: 50em) {
		.grid {
			grid-template-columns: 1fr 1fr;
			gap: 4rem;
		}

		.grid-offset {
			--row-offset: var(--default-offset);
			padding-bottom: var(--row-offset);
		}

		body[data-page="work"] .grid-offset {
			--row-offset: var(--offset-work);
		}

		.grid.offset > :global(:nth-child(odd)) {
			transform: translateY(var(--row-offset));
		}

		.grid.offset > :global(:last-child:nth-child(odd)) {
			grid-column: 2 / 3;
			transform: none;
		}

		.grid.small {
			display: flex;
			flex-wrap: wrap;
			justify-content: center;
			gap: 2rem;
		}

		.grid.small > :global(*) {
			flex-basis: 20rem;
		}
	}
</style>
<script>
	const currentPagePath = window.location.pathname;
	let offsetValue = '0rem';

	if (currentPagePath.includes('/work')) {
		offsetValue = '7.5rem';
	}

	document.documentElement.style.setProperty('--default-offset', offsetValue);
	document.body.setAttribute('data-page', 'work');
</script>